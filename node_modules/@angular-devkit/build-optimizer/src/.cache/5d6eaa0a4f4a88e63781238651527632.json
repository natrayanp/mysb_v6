{"remainingRequest":"/home/natrayan/project/AwsProject/Angular/tradingapp/tradingapp1/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/natrayan/project/AwsProject/Angular/tradingapp/tradingapp1/node_modules/angularfire2/database/list/audit-trail.js","dependencies":[{"path":"/home/natrayan/project/AwsProject/Angular/tradingapp/tradingapp1/node_modules/angularfire2/database/list/audit-trail.js","mtime":1527008690000},{"path":"/home/natrayan/project/AwsProject/Angular/tradingapp/tradingapp1/node_modules/cache-loader/dist/cjs.js","mtime":1525540575382},{"path":"/home/natrayan/project/AwsProject/Angular/tradingapp/tradingapp1/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { stateChanges } from './state-changes';\nimport { fromRef } from '../observable/fromRef';\nimport { skipWhile, withLatestFrom, map, scan } from 'rxjs/operators';\nexport function auditTrail(query, events) {\n    var auditTrail$ = stateChanges(query, events)\n        .pipe(scan(function (current, action) { return current.concat([action]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    return fromRef(query, 'value')\n        .pipe(map(function (data) {\n        var lastKeyToLoad;\n        data.payload.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$) {\n    var loaded$ = loadedData(query);\n    return loaded$\n        .pipe(withLatestFrom(action$), map(function (_a) {\n        var loaded = _a[0], actions = _a[1];\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        var loadedKeys = actions.map(function (snap) { return snap.key; });\n        return { actions: actions, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), skipWhile(function (meta) { return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1; }), map(function (meta) { return meta.actions; }));\n}\n//# sourceMappingURL=audit-trail.js.map",null]}